# Name of the workflow
name: Deploy to DigitalOcean Droplet

# This workflow runs on a 'push' event to the 'main' branch
on:
  push:
    branches:
      - main

jobs:
  deploy:
    # Use the latest version of Ubuntu for the runner
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Install the SSH private key from GitHub Secrets
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'just-a-placeholder'
      
      # Step 3: Add the droplet's host key to the runner's known_hosts
      - name: Add Droplet to Known Hosts
        run: ssh-keyscan -H ${{ secrets.DROPLET_HOST }} >> ~/.ssh/known_hosts

      # Step 4: Connect to the droplet and run the deployment commands
      - name: Deploy to Droplet
        run: |
          ssh ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }} << 'EOF'
            # Navigate to the project directory on the droplet
            # !!! REPLACE THIS WITH YOUR REPOSITORY NAME !!!
            cd ~/YOUR_REPO_NAME 
            
            # Pull the latest changes from the main branch
            git pull origin main
            
            echo "Latest code pulled. Building and restarting services via Docker Compose..."
            
            # Use Docker Compose to rebuild the app image and restart services in detached mode
            docker-compose up --build -d
            
            # Prune old, unused Docker images to save space
            docker image prune -af
            
            echo "Deployment successful!"
          EOF