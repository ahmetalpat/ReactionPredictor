# Name of the workflow
name: Deploy to DigitalOcean via Password SSH

# Run this workflow on a push to the 'main' branch
# The indentation here is crucial
on:
  push:
    branches:
      - main

jobs:
  deploy:
    # Use the latest Ubuntu runner
    runs-on: ubuntu-latest

    steps:
      # Step 1: Use a pre-built action for SSH deployment
      - name: Deploy to Droplet
        uses: appleboy/ssh-action@master
        with:
          # Get the droplet credentials from GitHub Secrets
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          password: ${{ secrets.DROPLET_PASSWORD }}
          # The script block contains the commands to run on your server
          script: |
            # Navigate into the project directory
            cd ~/ReactionPredictor
            
            # Pull the latest code from your GitHub repository
            git pull origin main
            
            echo "âœ… Latest code pulled. Forcing a clean rebuild of services..."
            
            # Stop and remove the old running containers to ensure a clean start
            docker-compose down
            
            # Rebuild the app image from scratch, ignoring any cache
            docker-compose build --no-cache app
            
            # Start the new services in detached mode
            docker-compose up -d
            
            # Clean up old, unused Docker images to save disk space
            docker image prune -af
            
            echo "ðŸš€ Deployment successful!"